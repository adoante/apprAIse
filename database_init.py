from database.sql_helper import *

# Chipset Data
chipsets_data = [
	("Qualcomm Snapdragon 845", "Qualcomm", "845"),
	("Qualcomm Snapdragon 670", "Qualcomm", "670"),
	("Qualcomm Snapdragon 855", "Qualcomm", "855"),
	("Qualcomm Snapdragon 730G", "Qualcomm", "730G"),
	("Qualcomm Snapdragon 765G", "Qualcomm", "765G"),
	("Qualcomm Snapdragon 888", "Qualcomm", "888"),
	("Qualcomm Snapdragon 8 Gen 1", "Qualcomm", "8 Gen 1"),
	("Qualcomm Snapdragon 8 Gen 2", "Qualcomm", "8 Gen 2"),
	("Qualcomm Snapdragon 8 Gen 3", "Qualcomm", "8 Gen 3"),
	("Qualcomm 8 Elite", "Qualcomm", "8 Elite")
]

# Device Data
devices_data = [     
	("google pixel 3", "mobile", "Google", 1),
    ("google pixel 3a", "mobile", "Google", 2),
    ("google pixel 3a XL", "mobile", "Google", 2),
    ("google pixel 4", "mobile", "Google", 3),
    ("google pixel 4a", "mobile", "Google", 4),
    ("google pixel 5a 5G", "mobile", "Google", 5),
    ("Samsung Galaxy S21", "mobile", "Samsung", 6),
    ("Samsung Galaxy S21 Ultra", "mobile", "Samsung", 6),
    ("Samsung Galaxy S21+", "mobile", "Samsung", 6),
    ("Samsung Galaxy S22 5G", "mobile", "Samsung", 7),
    ("Samsung Galaxy S22 Ultra 5G", "mobile", "Samsung", 7),
    ("Samsung Galaxy S22+ 5G", "mobile", "Samsung", 7),
    ("Samsung Galaxy S23", "mobile", "Samsung", 8),
    ("Samsung Galaxy S23 Ultra", "mobile", "Samsung", 8),
    ("Samsung Galaxy S23+", "mobile", "Samsung", 8),
    ("Samsung Galaxy S24", "mobile", "Samsung", 9),
    ("Samsung Galaxy S24 Ultra", "mobile", "Samsung", 9),
    ("Samsung Galaxy S24+", "mobile", "Samsung", 9),
    ("Samsung Galaxy Tab S8", "tablet", "Samsung", 6),
    ("Snapdragon 8 Elite QRD", "mobile", "Qualcomm", 10),
    ("Xiaomi 12", "mobile", "Xiaomi", 7),
    ("Xiaomi 12 Pro", "mobile", "Xiaomi", 7)
]

library_data = [
	"tflite",
	"onnx"
]


# accuracy_top1,
# accuracy_top5,
# inference_time: float
# memory_usage: int
# npu_layers: int
# device_id,
# model_id,
# library_id

benchmark_data = [
	## Samsung Galaxy S24 (Family)

	# TFlite
	(77.07, 93.24, 1.37, 100, 82, "Samsung Galaxy S24", "wideresnet50_quantized", "tflite"),
	(77.12, 99.33, 3.64, 173, 79, "Samsung Galaxy S24", "wideresnet50", "tflite"),
	(79.94, 94.78, 9.05, 283, 1579, "Samsung Galaxy S24", "vit", "tflite"),
	(79.18, 94.5, 7.36, 162, 837, "Samsung Galaxy S24", "swin_tiny", "tflite"),
	(81.98, 95.88, 12.4, 264, 1563,  "Samsung Galaxy S24", "swin_small", "tflite"),
	(81.9, 95.97, 15.8, 377, 1568, "Samsung Galaxy S24", "swin_base", "tflite"),
	(54.65, 77.99, 0.144, 19, 43, "Samsung Galaxy S24", "squeezenet1_1_quantized", "tflite"),
	(54.83, 78.11, 0.424, 24, 41, "Samsung Galaxy S24", "squeezenet1_1", "tflite"),
	(55.82, 78.06, 0.229, 25, 175,  "Samsung Galaxy S24", "shufflenet_v2_quantized", "tflite"),
	(56.2, 78.47, 0.453, 29, 159, "Samsung Galaxy S24", "shufflenet_v2", "tflite"),
	(79.87, 94.78, 0.701, 54, 82, "Samsung Galaxy S24", "resnext50_quantized", "tflite"),
	(83.79, 96.54, 13.7, 271, 675, 'Samsung Galaxy S24', 'efficientvit_l2_cls', 'tflite'),
	(67.49, 88.0, 0.611, 39, 84, 'Samsung Galaxy S24', 'googlenet', 'tflite'),
	(67.28, 87.92, 0.199, 31, 86, 'Samsung Galaxy S24', 'googlenet_quantized', 'tflite'),
	(67.79, 87.77, 0.999, 93, 129, 'Samsung Galaxy S24', 'inception_v3', 'tflite'),
	(67.28, 87.92, 0.492, 55, 142,  'Samsung Galaxy S24', 'inception_v3_quantized', 'tflite'),
	(71.3, 89.89, 0.795, 46, 306, 'Samsung Galaxy S24', 'levit', 'tflite'),
	(64.61, 85.35, 0.485, 29, 71, 'Samsung Galaxy S24', 'mnasnet05', 'tflite'),
	(63.79, 85.61, 3.31, 46, 577, 'Samsung Galaxy S24', 'mobile_vit', 'tflite'),
	(69.2, 88.99, 0.572, 36, 71, 'Samsung Galaxy S24', 'mobilenet_v2', 'tflite'),
	(67.38, 87.87, 0.314, 31, 108, 'Samsung Galaxy S24', 'mobilenet_v2_quantized', 'tflite'),
	(71.63, 90.1, 0.649, 37, 128, 'Samsung Galaxy S24', 'mobilenet_v3_large', 'tflite'),
	(70.57, 89.44, .248, 30, 137, 'Samsung Galaxy S24', 'mobilenet_v3_large_quantized', 'tflite'),
	(80.03, 94.86, 2, 99, 508, 'Samsung Galaxy S24', 'efficientnet_v2_s', 'tflite'),
	(84.37, 97.28, 12.5, 303, 557, 'Samsung Galaxy S24', 'beit', 'tflite'),
	(83.54, 96.64, 5.56, 272, 598, 'Samsung Galaxy S24', 'convnext_base', 'tflite'),
	(81.14, 95.36, 3.46, 112, 379, 'Samsung Galaxy S24', 'efficientvit_b2_cls', 'tflite'),
	(81.85, 95.83, 2.28, 103, 328, 'Samsung Galaxy S24', 'convnext_tiny', 'tflite'),
	(72.58, 90.97, 1.28, 56, 312, 'Samsung Galaxy S24', 'densenet_121', 'tflite'),
	(77.4, 93.57, 2.07, 98, 175, 'Samsung Galaxy S24', 'dla102x', 'tflite'),
	(76.0, 92.88, 1.04, 45, 245, 'Samsung Galaxy S24', 'efficientnet_b0', 'tflite'),
	(77.7, 93.66, 2.43, 77, 482, 'Samsung Galaxy S24', 'efficientnet_b4', 'tflite'),

	# ONNX
	(77.08, 93.25, 15.50, 466, 151, "Samsung Galaxy S24", "wideresnet50_quantized", "onnx"),
	(77.12, 93.34, 3.980, 36, 128, "Samsung Galaxy S24", "wideresnet50", "onnx"),
	(79.95, 94.77, 10.00, 73, 976, "Samsung Galaxy S24", "vit", "onnx"),
	(80.68, 95.37, 9.390, 89, 623, "Samsung Galaxy S24", "swin_tiny", "onnx"),
	(82.60, 96.23, 15.70, 138, 1145, "Samsung Galaxy S24", "swin_small", "onnx"),
	(83.04, 96.45, 20.40, 172, 1150, "Samsung Galaxy S24", "swin_base", "onnx"),
	(54.62, 77.93, 0.343, 24, 47, "Samsung Galaxy S24", "squeezenet1_1_quantized", "onnx"),
	(54.84, 78.12, 0.357, 27, 71, "Samsung Galaxy S24", "squeezenet1_1", "onnx"),
	(55.89, 78.07, 5.760, 191, 259,  "Samsung Galaxy S24", "shufflenet_v2_quantized", "onnx"),
	(56.22, 78.48, 0.625, 27, 223, "Samsung Galaxy S24", "shufflenet_v2", "onnx"),
	(79.92, 94.76, 1.520, 72, 147, "Samsung Galaxy S24", "resnext50_quantized", "onnx"),

	## Samsung Galaxy S23 (Family)

	# TFlite
	(77.07, 93.24, 1.76, 340, 82, 'Samsung Galaxy S23', 'wideresnet50_quantized', 'tflite'),
	(72.36, 87.72, 4.91, 1000, 79, 'Samsung Galaxy S23', 'wideresnet50', 'tflite'),
	(79.94, 94.77, 13.2, 11, 1579, 'Samsung Galaxy S23', 'vit', 'tflite'),
	(79.18, 94.5, 11.1, 16, 837, 'Samsung Galaxy S23', 'swin_tiny', 'tflite'),
	(81.98, 95.89, 18.5, 28, 1563, 'Samsung Galaxy S23', 'swin_small', 'tflite'),
	(81.91, 95.98, 22.4, 32, 1568, 'Samsung Galaxy S23', 'swin_base', 'tflite'),
	(54.65, 77.99, 0.198, 3, 43, 'Samsung Galaxy S23', 'squeezenet1_1_quantized', 'tflite'),
	(54.82, 78.11, 0.618, 17, 41, 'Samsung Galaxy S23', 'squeezenet1_1', 'tflite'),
	(55.82, 78.06, 0.313, 8, 175, 'Samsung Galaxy S23', 'shufflenet_v2_quantized', 'tflite'),
	(56.2, 78.47, 0.695, 27, 159, 'Samsung Galaxy S23', 'shufflenet_v2', 'tflite'),
	(79.87, 94.78, 0.910, 66, 82, 'Samsung Galaxy S23', 'resnext50_quantized', 'tflite'),
	(83.53, 96.64, 7.48, 25, 598, 'Samsung Galaxy S23', 'convnext_base', 'tflite'),
	(81.85, 95.83, 3.02, 445, 328, 'Samsung Galaxy S23', 'convnext_tiny', 'tflite'),
	(72.59, 90.97, 1.90, 97, 312, 'Samsung Galaxy S23', 'densenet_121', 'tflite'),
	(77.41, 93.57, 2.82, 32, 175, 'Samsung Galaxy S23', 'dla102x', 'tflite'),
	(75.99, 92.87, 1.47, 111, 245, 'Samsung Galaxy S23', 'efficientnet_b0', 'tflite'),
	(77.7, 93.67, 3.31, 383, 482, 'Samsung Galaxy S23', 'efficientnet_b4', 'tflite'),
	(80.03, 94.87, 2.68, 324, 508, 'Samsung Galaxy S23', 'efficientnet_v2_s', 'tflite'),
	(81.15, 95.36, 5.05, 249, 379, 'Samsung Galaxy S23', 'efficientvit_b2_cls', 'tflite'),

	# ONNX
	(77.09, 93.25, 18.6, 212, 151, 'Samsung Galaxy S23', 'wideresnet50_quantized', 'onnx'),
	(77.12, 93.34, 5.43, 297, 128, 'Samsung Galaxy S23', 'wideresnet50', 'onnx'),
	(79.94, 94.77, 14.3, 348, 976, 'Samsung Galaxy S23', 'vit', 'onnx'),
	(80.68, 95.38, 13.4, 131, 623, 'Samsung Galaxy S23', 'swin_tiny', 'onnx'),
	(82.59, 96.23, 22.9, 224, 1145, 'Samsung Galaxy S23', 'swin_small', 'onnx'),
	(83.04, 96.46, 29, 343, 1150, 'Samsung Galaxy S23', 'swin_base', 'onnx'),
	(54.62, 77.93, 0.481, 7, 47, 'Samsung Galaxy S23', 'squeezenet1_1_quantized', 'onnx'),
	(54.83, 78.12, 0.515, 10, 71, 'Samsung Galaxy S23', 'squeezenet1_1', 'onnx'),
	(55.89, 78.07, 7.56, 56, 259, 'Samsung Galaxy S23', 'shufflenet_v2_quantized', 'onnx'),
	(56.22, 78.48, 1.03, 13, 223, 'Samsung Galaxy S23', 'shufflenet_v2', 'onnx'),
	(79.92, 94.76, 2.24, 45, 147, 'Samsung Galaxy S23', 'resnext50_quantized', 'onnx'),

	## Snapdragon 8 Elite QRD

	# ONNX
	(77.04, 93.27, 13.5, 436, 87, 'Snapdragon 8 Elite QRD', 'wideresnet50_quantized', 'onnx'),
	(77.11, 93.34, 3.54, 37, 128, 'Snapdragon 8 Elite QRD', 'wideresnet50', 'onnx'),
	(79.96, 94.77, 6.78, 287, 988, 'Snapdragon 8 Elite QRD', 'vit', 'onnx'),
	(80.69, 95.37, 6.83, 152, 654, 'Snapdragon 8 Elite QRD', 'swin_tiny', 'onnx'),
	(82.6, 96.23, 11, 243, 1176, 'Snapdragon 8 Elite QRD', 'swin_small', 'onnx'),
	(83.04, 96.46, 13.7, 342, 1183, 'Snapdragon 8 Elite QRD', 'swin_base', 'onnx'),
	(54.64, 77.97, 0.397, 19, 47, 'Snapdragon 8 Elite QRD', 'squeezenet1_1_quantized', 'onnx'),
	(54.83, 78.13, 0.376, 17, 71, 'Snapdragon 8 Elite QRD', 'squeezenet1_1', 'onnx'),
	(55.89, 78.07, 0.629, 21, 189, 'Snapdragon 8 Elite QRD', 'shufflenet_v2_quantized', 'onnx'),
	(56.23, 78.49, 545, 23, 223, 'Snapdragon 8 Elite QRD', 'shufflenet_v2', 'onnx'),
	(79.9, 94.78, 1.02, 60, 83, 'Snapdragon 8 Elite QRD', 'resnext50_quantized', 'onnx'),

	# TFLITE
	(77.07, 93.24, 1.22, 41, 82, 'Snapdragon 8 Elite QRD', 'wideresnet50_quantized', 'tflite'),
	(77.12, 93.33, 3.39, 87, 79, 'Snapdragon 8 Elite QRD', 'wideresnet50', 'tflite'),
	(79.94, 94.77, 8.26, 282, 1579, 'Snapdragon 8 Elite QRD', 'vit', 'tflite'),
	(79.19, 94.5, 6.85, 154, 837, 'Snapdragon 8 Elite QRD', 'swin_tiny', 'tflite'),
	(82.0, 95.89, 11.9, 258, 1563, 'Snapdragon 8 Elite QRD', 'swin_small', 'tflite'),
	(81.91, 95.98, 12.4, 375, 1568, 'Snapdragon 8 Elite QRD', 'swin_base', 'tflite'),
	(54.65, 77.99, 0.115, 14, 43, 'Snapdragon 8 Elite QRD', 'squeezenet1_1_quantized', 'tflite'),
	(54.83, 78.11, 0.344, 18, 41, 'Snapdragon 8 Elite QRD', 'squeezenet1_1', 'tflite'),
	(55.82, 78.06, 0.231, 18, 175, 'Snapdragon 8 Elite QRD', 'shufflenet_v2_quantized', 'tflite'),
	(56.2, 78.47, 0.445, 21, 159, 'Snapdragon 8 Elite QRD', 'shufflenet_v2', 'tflite'),
	(79.87, 94.78, 0.571, 51, 82, 'Snapdragon 8 Elite QRD', 'resnext50_quantized', 'tflite'),
]

# model_name: str
# github_link: str
# hugging_face_link: str
# research_paper_link: str
# qai_hub_link: str
# model_end_point: str
# input_resolution: str
# parameters: str
# model_size: str

model_data = [
	(
		"beit",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/beit",
		"https://huggingface.co/qualcomm/Beit",
		"https://arxiv.org/abs/2106.08254",
		"https://aihub.qualcomm.com/compute/models/beit?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		87,
		169,
		"Images/Dove.PNG",
		"Imagenet classifier and general purpose backbone.",
		"Beit is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"convnext_base",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/convnext_base",
		"https://huggingface.co/qualcomm/ConvNext-Base",
		"https://arxiv.org/abs/2201.03545",
		"https://aihub.qualcomm.com/compute/models/convnext_base?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		28.6,
		109,
		"Images/BallonModel.PNG",
		"Imagenet classifier and general purpose backbone.",
		"ConvNextBase is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"convnext_tiny",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/convnext_tiny",
		"https://huggingface.co/qualcomm/ConvNext-Tiny",
		"https://arxiv.org/abs/2201.03545",
		"https://aihub.qualcomm.com/compute/models/convnext_tiny?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		28.6,
		109,
		"Images/BallonModel.PNG",
		"Imagenet classifier and general purpose backbone.",
		"ConvNextTiny is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"convnext_tiny_w8a16_quantized",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/convnext_tiny_w8a16_quantized",
		"https://huggingface.co/qualcomm/ConvNext-Tiny-W8A16-Quantized",
		"https://arxiv.org/abs/2201.03545",
		"https://aihub.qualcomm.com/compute/models/convnext_tiny_w8a16_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		28.6,
		28,
		"Images/BallonModel.PNG",
		"Imagenet classifier and general purpose backbone.",
		"ConvNextTiny is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"densenet_121",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/densenet121",
		"https://huggingface.co/qualcomm/DenseNet-121",
		"https://arxiv.org/abs/1608.06993",
		"https://aihub.qualcomm.com/compute/models/densenet121?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		7.97,
		30.5,
		"Images/Kola.PNG",
		"Imagenet classifier and general purpose backbone.",
		"Densenet is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"densenet_121_quantized",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/densenet121_quantized",
		"https://huggingface.co/qualcomm/DenseNet-121-Quantized",
		"https://arxiv.org/abs/1608.06993",
		"https://aihub.qualcomm.com/models/densenet121_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		7.97,
		9.4,
		"Images/Kola.PNG",
		"Imagenet classifier and general purpose backbone.",
		"Densenet is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"dla102x",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/dla102x",
		"https://huggingface.co/qualcomm/dla102x",
		"https://arxiv.org/abs/1707.06484",
		"https://aihub.qualcomm.com/compute/models/dla102x?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		26.3,
		111,
		"Images/raven.PNG",
		"Imagenet classifier and general purpose backbone.",
		"dla is a machine learning model that can classify images from the Imagenet dataset. It is a architecture which can be used as backbone.",
	),
	(
		"efficientnet_b0",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/efficientnet_b0",
		"https://huggingface.co/qualcomm/EfficientNet-B0",
		"https://arxiv.org/abs/1905.11946",
		"https://aihub.qualcomm.com/compute/models/efficientnet_b0?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		5.27,
		20.2,
		"Images/cow.PNG",
		"Imagenet classifier and general purpose backbone.",
		"EfficientNetB0 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"efficientnet_b4",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/efficientnet_b4",
		"https://huggingface.co/qualcomm/EfficientNet-B4",
		"https://arxiv.org/abs/1905.11946",
		"https://aihub.qualcomm.com/compute/models/efficientnet_b4?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"380x380",
		19.34,
		74.5,
		"Images/cow.PNG",
		"Imagenet classifier and general purpose backbone.",
		"EfficientNetB4 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"efficientnet_v2_s",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/efficientnet_v2_s",
		"https://huggingface.co/qualcomm/EfficientNet-V2-s",
		"https://arxiv.org/abs/2104.00298",
		"https://aihub.qualcomm.com/compute/models/efficientnet_v2_s?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"384x384",
		21.45,
		82.7,
		"Images/cow.PNG",
		"Imagenet classifier and general purpose backbone.",
		"EfficientNetV2‑s is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"efficientvit_b2_cls",
		"https://github.com/quic/ai-hub-models/blob/main/qai_hub_models/models/efficientvit_b2_cls",
		"https://huggingface.co/qualcomm/EfficientViT-b2-cls",
		"https://arxiv.org/abs/2205.14756",
		"https://aihub.qualcomm.com/compute/models/efficientvit_b2_cls?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		24,
		200,
		"Images/raven.PNG",
		"Imagenet classifier and general purpose backbone.",
		"EfficientViT is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"wideresnet50_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/wideresnet50_quantized",
		"https://huggingface.co/qualcomm/WideResNet50-Quantized",
		"https://arxiv.org/abs/1605.07146",
		"https://aihub.qualcomm.com/models/wideresnet50_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		68.9,
		66.6,
		"Images/tulip.PNG",
		"Imagenet classifier and general purpose backbone.",
		"WideResNet50 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"wideresnet50",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/wideresnet50",
		"https://huggingface.co/qualcomm/WideResNet50",
		"https://arxiv.org/abs/1605.07146",
		"https://aihub.qualcomm.com/models/wideresnet50?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		68.8,
		263,
		"Images/tulip.PNG",
		"Imagenet classifier and general purpose backbone.",
		"WideResNet50 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"vit",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/vit",
		"https://huggingface.co/qualcomm/VIT",
		"https://arxiv.org/abs/2010.11929",
		"https://aihub.qualcomm.com/models/vit?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		86.6,
		330,
		"Images/jaguar.PNG",
		"Imagenet classifier and general purpose backbone.",
		"VIT is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"swin_tiny",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/swin_tiny",
		"https://huggingface.co/qualcomm/Swin-Tiny",
		"https://arxiv.org/abs/2103.14030",
		"https://aihub.qualcomm.com/models/swin_tiny?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		28.8,
		110,
		"Images/monkey.PNG",
		"Imagenet classifier and general purpose backbone.",
		"SwinTiny is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"swin_small",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/swin_small",
		"https://huggingface.co/qualcomm/Swin-Small",
		"https://arxiv.org/abs/2103.14030",
		"https://aihub.qualcomm.com/models/swin_small?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		50.4,
		193,
		"Images/cow.PNG",
		"Imagenet classifier and general purpose backbone.",
		"SwinSmall is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"swin_base",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/swin_base",
		"https://huggingface.co/qualcomm/Swin-Base",
		"https://arxiv.org/abs/2103.14030",
		"https://aihub.qualcomm.com/models/swin_base?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		88.8,
		339,
		"Images/otter.PNG",
		"Imagenet classifier and general purpose backbone.",
		"SwinBase is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"squeezenet1_1_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/squeezenet1_1_quantized",
		"https://huggingface.co/qualcomm/SqueezeNet-1_1Quantized",
		"https://arxiv.org/abs/1602.07360",
		"https://aihub.qualcomm.com/models/squeezenet1_1_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		1.24,
		1.30,
		"Images/golf_cart.PNG",
		"Imagenet classifier and general purpose backbone.",
		"SqueezeNet is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"squeezenet1_1",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/squeezenet1_1",
		"https://huggingface.co/qualcomm/SqueezeNet-1_1",
		"https://arxiv.org/abs/1602.07360",
		"https://aihub.qualcomm.com/models/squeezenet1_1?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		1.24,
		4.73,
		"Images/golf_cart.PNG",
		"Imagenet classifier and general purpose backbone.",
		"SqueezeNet is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"shufflenet_v2_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/shufflenet_v2_quantized",
		"https://huggingface.co/qualcomm/Shufflenet-v2Quantized",
		"https://arxiv.org/abs/1807.11164",
		"https://aihub.qualcomm.com/models/shufflenet_v2_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		1.37,
		4.42,
		"Images/pencil.PNG",
		"Imagenet classifier and general purpose backbone.",
		"ShufflenetV2 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"shufflenet_v2",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/shufflenet_v2",
		"https://huggingface.co/qualcomm/Shufflenet-v2",
		"https://arxiv.org/abs/1807.11164",
		"https://aihub.qualcomm.com/models/shufflenet_v2?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		1.36,
		5.25,
		"Images/pencil.PNG",
		"Imagenet classifier and general purpose backbone.",
		"ShufflenetV2 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"resnext50_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/resnext50_quantized",
		"https://huggingface.co/qualcomm/ResNeXt50Quantized",
		"https://arxiv.org/abs/1611.05431",
		"https://aihub.qualcomm.com/models/resnext50_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		88.7,
		87.3,
		"Images/mouse.PNG",
		"Imagenet classifier and general purpose backbone.",
		"ResNeXt50 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",	
	),
	(
		"efficientvit_l2_cls",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/efficientvit_l2_cls",
		"https://huggingface.co/qualcomm/EfficientViT-l2-cls",
		"https://arxiv.org/abs/2205.14756",
		"https://aihub.qualcomm.com/models/efficientvit_l2_cls?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		64,
		243,
		"Images/raven.PNG",
		"Imagenet classifier and general purpose backbone.",
		"EfficientViT is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"googlenet",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/googlenet",
		"https://huggingface.co/qualcomm/GoogLeN",
		"https://arxiv.org/abs/1409.4842",
		"https://aihub.qualcomm.com/models/googlenet?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		6.62,
		25.3,
		"Images/dolphin.PNG",
		"Imagenet classifier and general purpose backbone.",
		"GoogLeNet is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"googlenet_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/googlenet_quantized",
		"https://huggingface.co/qualcomm/GoogLeNetQuantized",
		"https://arxiv.org/abs/1409.4842",
		"https://aihub.qualcomm.com/models/googlenet_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		6.62,
		6.55,
		"Images/dolphin.PNG",
		"Imagenet classifier and general purpose backbone.",
		"GoogLeNet is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"inception_v3",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/inception_v3",
		"https://huggingface.co/qualcomm/Inception-v3",
		"https://arxiv.org/abs/1512.00567",
		"https://aihub.qualcomm.com/models/inception_v3?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		23.8,
		90.9,
		"Images/sheep.PNG",
		"Imagenet classifier and general purpose backbone.",
		"InceptionNetV3 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"inception_v3_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/inception_v3_quantized",
		"https://huggingface.co/qualcomm/Inception-v3-Quantized",
		"https://arxiv.org/abs/1512.00567",
		"https://aihub.qualcomm.com/models/inception_v3_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		23.9,
		23.3,
		"Images/sheep.PNG",
		"Quantized Imagenet classifier and general purpose backbone.",
		"InceptionNetV3 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases. This model is post‑training quantized to int8 using samples from Google's open images dataset.",
	),
	(
		"levit",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/levit",
		"https://huggingface.co/qualcomm/LeViT",
		"https://arxiv.org/abs/2104.01136",
		"https://aihub.qualcomm.com/models/levit?domain=Computer+Vision&useCase=Image+Classification",
		"LeViT-128S",
		"224x224",
		7.82,
		29.9,
		"Images/raven.PNG",
		"Imagenet classifier and general purpose backbone.",
		"LeViT is a vision transformer model that can classify images from the Imagenet dataset.",
	),
	(
		"mnasnet05",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/mnasnet05",
		"https://huggingface.co/qualcomm/MNASNet05",
		"https://arxiv.org/abs/1807.11626",
		"https://aihub.qualcomm.com/models/mnasnet05?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		2.21,
		8.45,
		"Images/zebra.PNG",
		"Imagenet classifier and general purpose backbone",
		"MNASNet05 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"mobile_vit",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/mobile_vit",
		"https://huggingface.co/qualcomm/Mobile_Vit",
		"https://arxiv.org/abs/2110.02178",
		"https://aihub.qualcomm.com/models/mobile_vit?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		0,
		0,
		"Images/Dove.PNG",
		"Imagenet classifier and general purpose backbone.",
		"MobileVit is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"mobilenet_v2",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/mobilenet_v2",
		"https://huggingface.co/qualcomm/MobileNet-v2",
		"https://arxiv.org/abs/1801.04381",
		"https://aihub.qualcomm.com/models/mobilenet_v2?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		3.49,
		13.3,
		"Images/raven.PNG",
		"Imagenet classifier and general purpose backbone.",
		"MobileNetV2 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"mobilenet_v2_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/mobilenet_v2_quantized",
		"https://huggingface.co/qualcomm/MobileNet-v2-Quantized",
		"https://arxiv.org/abs/1801.04381",
		"https://aihub.qualcomm.com/models/mobilenet_v2_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		3.49,
		3.42,
		"Images/raven.PNG",
		"Imagenet classifier and general purpose backbone.",
		"MobileNetV2 is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"mobilenet_v3_large",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/mobilenet_v3_large",
		"https://huggingface.co/qualcomm/MobileNet-v3-Large",
		"https://arxiv.org/abs/1905.02244",
		"https://aihub.qualcomm.com/models/mobilenet_v3_large?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		5.47,
		20.9,
		"Images/train.PNG",
		"Imagenet classifier and general purpose backbone.",
		"MobileNet‑v3‑Large is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
	(
		"mobilenet_v3_large_quantized",
		"https://github.com/quic/ai-hub-models/tree/main/qai_hub_models/models/mobilenet_v3_large_quantized",
		"https://huggingface.co/qualcomm/MobileNet-v3-Large-Quantized",
		"https://arxiv.org/abs/1905.02244",
		"https://aihub.qualcomm.com/models/mobilenet_v3_large_quantized?domain=Computer+Vision&useCase=Image+Classification",
		"Imagenet",
		"224x224",
		5.47,
		5.79,
		"Images/train.PNG",
		"Imagenet classifier and general purpose backbone.",
		"MobileNet‑v3‑Large is a machine learning model that can classify images from the Imagenet dataset. It can also be used as a backbone in building more complex models for specific use cases.",
	),
]

SQLModel.metadata.create_all(engine)

# Insert Data
with Session(engine) as session:
	#Add all of the chipsets to the database
	for chipset_name, chipset_manufacturer, chipset_version in chipsets_data:
		chipset = Chipset(chipset_name=chipset_name, manufacturer=chipset_manufacturer, version=chipset_version)
		session.add(chipset)

	#Add all of the devices to the database
	for device_name, device_industry, device_company, chipset_id in devices_data:
		device = Device(device_name= device_name, device_industry= device_industry, device_company= device_company, chipset_id= chipset_id)
		session.add(device)

	# Add libraries
	for library_name in library_data:
		library = Library(library_name=library_name)
		session.add(library)

	# Add models
	for model in model_data:
		ai_model = Model(model_name=model[0],
				   github_link=model[1],
				   hugging_face_link=model[2],
				   research_paper_link=model[3],
				   qai_hub_link=model[4],
				   model_end_point=model[5],
				   input_resolution=model[6],
				   parameters=model[7],
				   model_size=model[8],
				   model_img = model[9],
				   short_desc=model[10],
				   long_desc=model[11]
				   )
		session.add(ai_model)

	# Add benchmarks
	for benchmark in benchmark_data:
		library = session.exec(select(Library).where(Library.library_name == benchmark[7])).first().library_id
		model = session.exec(select(Model).where(Model.model_name == benchmark[6])).first().model_id
		device = session.exec(select(Device).where(Device.device_name == benchmark[5])).first().device_id

		ai_benchmark = Benchmark(
			accuracy_top1=benchmark[0],
			accuracy_top5=benchmark[1],
			inference_time=benchmark[2],
			memory_usage=benchmark[3],
			npu_layers=benchmark[4],
			device_id=device,
			model_id=model,
			library_id=library)
		session.add(ai_benchmark)
		
	session.commit()